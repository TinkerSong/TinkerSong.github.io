{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tinker's Blog",
    "subtitle": null,
    "icon": "https://blog.spylovetinker.cn/images/favicon.ico",
    "description": "Blog",
    "home_page_url": "https://blog.spylovetinker.cn",
    "items": [
        {
            "id": "https://blog.spylovetinker.cn/archlinux-install/",
            "url": "https://blog.spylovetinker.cn/archlinux-install/",
            "title": "ArchLinux安装配置手册[系统篇]",
            "date_published": "2020-12-22T02:29:45.481Z",
            "content_html": "<h1 id=\"安装前的准备\"><a class=\"anchor\" href=\"#安装前的准备\">#</a> 安装前的准备</h1>\n<p>镜像下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXgub3JnL2Rvd25sb2FkLw==\">https://archlinux.org/download/</span></p>\n<div class=\"note default\">\n<p>未使用过 Linux 的用户，建议先了解一下 Linux</p>\n</div>\n<h1 id=\"启动live环境\"><a class=\"anchor\" href=\"#启动live环境\">#</a> 启动 Live 环境</h1>\n<p>（1）制作启动盘</p>\n<p>如果你是 Windows 用户，你可以使用 Rufus 来制作，具体使用方法你可以查阅一下百度。</p>\n<p>如果你是 Linux 用户，你只需要使用 dd 命令即可，相信你肯定会的。</p>\n<p>（2）进入 Live 环境</p>\n<p>选择从带有 Arch 安装文件的媒介启动通常是在你电脑开机的时候按下某个按键，一般会在启动画面有提示。不同的主板按键不同。</p>\n<p>当 Arch 菜单出现时，选择 Boot Arch Linux 并按 Enter 进入安装环境。</p>\n<h1 id=\"验证启动模式重要\"><a class=\"anchor\" href=\"#验证启动模式重要\">#</a> 验证启动模式（重要）</h1>\n<p>可以列出 efivars 目录以验证启动模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> /sys/firmware/efi/efivars</pre></td></tr></table></figure><p>如果目录不存在，系统可能以 BIOS 或 CSM 模式启动，详见您的主板手册。</p>\n<p>如果目录存在。系统就是以 UEFI 启动。</p>\n<p>请记住你的启动模式！！！</p>\n<h1 id=\"连接网络\"><a class=\"anchor\" href=\"#连接网络\">#</a> 连接网络</h1>\n<div class=\"note default\">\n<p>请选择其中一种方式连接</p>\n</div>\n<p>1. 连接网线</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dhcpcd</pre></td></tr></table></figure><p>2. 连接 WiFi</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wifi-menu</pre></td></tr></table></figure><p>目前 wifi-menu 连接工具已经被移除，请参照最新的 wiki 文档使用新的工具</p>\n<h1 id=\"分区方案\"><a class=\"anchor\" href=\"#分区方案\">#</a> 分区方案</h1>\n<p>BIOS with MBR</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">挂载点</th>\n<th style=\"text-align:center\">分区</th>\n<th style=\"text-align:center\">分区类型</th>\n<th style=\"text-align:center\">建议大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/mnt</td>\n<td style=\"text-align:center\">/dev/sda1</td>\n<td style=\"text-align:center\">Linux</td>\n<td style=\"text-align:center\">剩余空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[SWAP]</td>\n<td style=\"text-align:center\">/dev/sda2</td>\n<td style=\"text-align:center\">Linux swap</td>\n<td style=\"text-align:center\">More than 512 MiB</td>\n</tr>\n</tbody>\n</table>\n<p>UEFI with GPT</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">挂载点</th>\n<th style=\"text-align:center\">分区</th>\n<th style=\"text-align:center\">分区类型</th>\n<th style=\"text-align:center\">建议大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/mnt/boot</td>\n<td style=\"text-align:center\">/dev/sda1</td>\n<td style=\"text-align:center\">EFI 系统分区</td>\n<td style=\"text-align:center\">265–512 MiB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/mnt</td>\n<td style=\"text-align:center\">/dev/sda2</td>\n<td style=\"text-align:center\">Linux x86-64 root (/)</td>\n<td style=\"text-align:center\">剩余空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[SWAP]</td>\n<td style=\"text-align:center\">/dev/sda3</td>\n<td style=\"text-align:center\">Linux swap</td>\n<td style=\"text-align:center\">More than 512 MiB</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note warning\">\n<p>分区方案解读：如果你是以 BIOS 模式启动，你就无须创建和挂载 /boot 分区。</p>\n<p>如果你是以 UEFI 模式启动，那你就必须创建和挂载 /boot 分区</p>\n</div>\n<p>#开始分区</p>\n<div class=\"note default\">\n<p>在那之前，建议你先了解一下以下分区的作用</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/ <span class=\"token comment\">#根目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/home <span class=\"token comment\">#家目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/boot <span class=\"token comment\">#引导分区</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>swap <span class=\"token comment\">#交换分区</span></pre></td></tr></table></figure><h1 id=\"格式化分区\"><a class=\"anchor\" href=\"#格式化分区\">#</a> 格式化分区</h1>\n<p>当分区建立好了，这些分区都需要使用适当的文件系统进行格式化</p>\n<div class=\"note warning\">\n<p>注意：请根据自己的分区情况进行对应的格式化，这里的硬盘分区只是作为例子，请根据自己实际情况进行操作</p>\n</div>\n<p>/</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkfs.ext4 /dev/sda1</pre></td></tr></table></figure><p>/home</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkfs.ext4 /dev/sda2</pre></td></tr></table></figure><p>/boot（BIOS 启动的不需要)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkfs.fat -F32 /dev/sda3</pre></td></tr></table></figure><p>swap</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkswap</span> /dev/sda4</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">swapon</span> /dev/sda4</pre></td></tr></table></figure><h1 id=\"挂载分区\"><a class=\"anchor\" href=\"#挂载分区\">#</a> 挂载分区</h1>\n<p>/<br />\n 将 / 分区挂载到 /mnt</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mount</span> /dev/sda1 /mnt</pre></td></tr></table></figure><p>/home<br />\n/mnt 下创建 /home 文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /mnt/home</pre></td></tr></table></figure><p>挂载 /home 分区</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mount</span> /dev/sda2 /mnt/home</pre></td></tr></table></figure><p>/boot（BIOS 启动的不需要）<br />\n/mnt 下创建 /boot</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /mnt/boot</pre></td></tr></table></figure><p>挂载引导分区</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mount</span> /dev/sda3 /mnt/boot</pre></td></tr></table></figure><p>安装基础软件包<br />\n base 软件包并没有包含全部 live 环境中的程序，packages.x86_64 页面包含了它们的差异。需要额外安装：</p>\n<p>管理所用文件系统 的用户工具<br />\n访问 RAID 或 LVM 分区的工具<br />\n未包含在 linux-firmware 中的额外固件<br />\n联网需要的程序<br />\n文本编辑器，<br />\n 访问 man 和 info 页面的工具： man-db, man-pages 和 texinfo.<br />\n 如果你还想安装其他软件包组比如 base-devel，请将他们的名字添加到 pacstrap 后，并用空格隔开。你也可以在 #Chroot 之后使用 pacman 手动安装软件包或组。</p>\n<div class=\"note default\">\n<p>如果你看不懂上面在说什么，那你跟着我运行下面的命令就行了</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacstrap /mnt base linux linux-firmware base-devel <span class=\"token function\">vi</span> <span class=\"token function\">vim</span> <span class=\"token function\">nano</span> dhcpcd</pre></td></tr></table></figure><h1 id=\"配置系统\"><a class=\"anchor\" href=\"#配置系统\">#</a> 配置系统</h1>\n<p>Fstab<br />\n 用以下命令生成 fstab 文件 (用 -U 或 -L 选项设置 UUID 或卷标)：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>genfstab -U /mnt <span class=\"token operator\">>></span> /mnt/etc/fstab</pre></td></tr></table></figure><p>Change root 到新安装的系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arch-chroot /mnt</pre></td></tr></table></figure><p>设置时区</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hwclock --systohc</pre></td></tr></table></figure><p>本地化设置<br />\n /etc/locale.gen 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号（＃）即可，建议选择带 UTF-8 的项：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/locale.gen</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>en_US.UTF-8 UTF-8 <span class=\"token comment\">#去掉对应编码前面的井号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>zh_CN.UTF-8 UTF-8</pre></td></tr></table></figure><p>保存退出<br />\n接着执行 locale-gen 以生成 locale 讯息：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>locale-gen</pre></td></tr></table></figure><p>将 LANG=en_US.UTF-8 加入 /etc/locale.conf</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/locale.conf</pre></td></tr></table></figure><p>设置主机名<br />\n xxxxs 是你的主机名（自己取个喜欢的名字）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"xxxx\"</span> <span class=\"token operator\">>></span> /etc/hostname</pre></td></tr></table></figure><p>设置 root 密码<br />\n使用 passwd 命令为 root 用户增加密码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span></pre></td></tr></table></figure><p>安装 Intel-ucode（非 Inter C PU 不需要）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S intel-ucode</pre></td></tr></table></figure><div class=\"note default\">\n<p>如果你的下载出错，可能是网络断开了，那就再连接一次网络即可</p>\n</div>\n<p>安装引导<br />\n如果你硬盘上还有别的系统，需要安装 os-prober。如果你的系统在别的硬盘单独引导，则不需要。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S os-prober</pre></td></tr></table></figure><p>对于 BIOS 系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S grub</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grub-install --target<span class=\"token operator\">=</span>i386-pc /dev/sdX    <span class=\"token comment\"># sdX 为你的安装硬盘</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">grub-mkconfig</span> -o /boot/grub/grub.cfg</pre></td></tr></table></figure><p>对于 UEFI 系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S grub efibootmgr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grub-install --target<span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span>/boot --bootloader-id<span class=\"token operator\">=</span>GRUB</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">grub-mkconfig</span> -o /boot/grub/grub.cfg</pre></td></tr></table></figure><h1 id=\"重启\"><a class=\"anchor\" href=\"#重启\">#</a> 重启</h1>\n<div class=\"note default\">\n<p>系统到这里就安装完毕了</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">umount</span> -R /mnt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><div class=\"note default\">\n<p>系统的美化就不做过多的赘述，因为可供的选择太多，例如 KDE，GNOME，MATE，i3，dwm，openbox 等。<br />\n每一个桌面的环境都不尽相同，大家根据自己的喜欢进行选择即可！</p>\n</div>\n",
            "tags": []
        },
        {
            "id": "https://blog.spylovetinker.cn/hello-world/",
            "url": "https://blog.spylovetinker.cn/hello-world/",
            "title": "Hello World",
            "date_published": "2020-12-18T19:45:37.063Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}